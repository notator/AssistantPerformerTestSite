
APInkscapeEditing.txt

******************************************************************************************************************
 
Moritz creates scores in the score's root folder as:
	a) a series of printable .svg pages (contained in an HTML file) whose names end with "page <pageNumber>.svg".
	b) an .svg file containing all the systems, whose name ends with "(scroll).svg".
These files are all overwritten without warning, when Moritz (re-)compiles the score.

When adding annotations:
1. create a new folder, called for example "annotated", inside the score's root folder, and copy the (scroll)
   version of the score there.
2. edit and save this copy using Inkscape. Note that Inkscape is VERY slow when editing large files.,
3. because the folder depth has changed, use Visual Studio to edit the stylesheet reference in line 2 from
   href="../fontsStyleSheet.css" to href="../../fontsStyleSheet.css".
4. To play the annotated file, add it to the options list in the Assistant Performer's score selector.
   The option value string must contain a path= item ending either with the word "(scroll)" or "(<nPages> pages)"
   -- e.g.
       <option value="path=Study 3 sketch 1/Study 3 sketch 1 (scroll)">Study 3 sketch 1 (scroll)</option>
       <option value="path=Study 3 sketch 1/Study 3 sketch 1 (2 pages)">Study 3 sketch 1 (pages)</option>
   This path= value includes the complete path from the Assistant Performer's "scores" folder to the page(s) to
   be used, so it will include the name of the folder containing the annotated page(s), if any.
   If separate pages are being used, their number will be retrieved from the integer following the first '('
   character in the path -- the individual page file names will end ...page 1.svg, ...page 2.svg etc.
   If a single (scroll) page is being used, the file's name will be as given in the path= string, plus an .svg suffix.   
   The inputHandler= option must be defined for scores containing input voices. It selects one of the Assistant
   Performer's inputHandlers. If omitted, the inputHandler is given its default value "none".
   For example:
   <option value="path=Study 3 sketch 2.1 - with input/Study 3 sketch 2 (scroll), inputHandler=keyboard1">Study 3 sketch 2.1 - with input (scroll)</option>
   
Scores can be edited as follows in Inkscape:

1. The Assistant Performer ignores:
	a) all layers except the 'score' layer.
	b) all id attributes except those inside the <defs> element (used to identify particular clef and flag
	   definitions). id attributes are, however useful as comments when editing in Inkscape, and should be
	   maintained.
	b) all objects that have no class (see below).
	d) all classes (e.g. barline) that are not listed below.
	c) all attributes (e.g. color) that a classed object does not originally have.
	Such items and values can therefore be added and changed ad lib.

	ID attributes are not used by the Assistant Performer, but they are useful hints when editing in Inkscape,
	so should also be maintained. Moritz uses the following conventions for the following groups:
        system: sys<systemNumber> (sys1, sys2 etc.) The numbers are top to bottom, relative to the page.
	    staff connectors: sys<systemNumber>connectors
	    outputStaff and inputStaff: sys<systemNumber>staff<staffNumber> ( sys1staff3, sys4staff1 etc.)
	       <staffNumber> is regardless of staff type, and is top to bottom, relative to the system.
	    stafflines: sys<systemNumber>staff<staffNumber>stafflines ( sys1staff3stafflines, sys4staff1stafflines
	    etc.)
        outputVoice and inputVoice: sys<systemNumber>staff<staffNumber>voice<voiceNumber> ( sys1staff3voice1,
	    sys4staff1voice2 etc.) <voiceNumber> is either 1 or 2, and is top to bottom, relative to the staff.

2. Editing text in Inkscape:
   Inkscape has some quirks about entering text. See http://tavmjong.free.fr/INKSCAPE/MANUAL/html/Text-Creating.html

3. Editing the 'score' layer:
   The following group types have a 'class' attribute, set by Moritz, that is used by the Assistant Performer:
        system,
		outputStaff,
		inputStaff,
		stafflines,
		outputVoice,
		inputVoice,
		outputChord,
		inputChord,
		rest.
   If any of these is ungrouped while editing, the class attribute must be reset when the group is regrouped.
   It is only necessary to group and ungroup systems when adding text or slurs.

   A simple Inkscape edit session goes like this:
   To edit user annotations (that will be ignored by the Assistant Performer), unlock the "user annotations" layer
   and add annotations there.
   To edit inside the score layer (posibly moving existing symbols):  
   a) Unlock the 'score' layer.
   b) Ungroup the system to be edited.
   c) Move the staff groups up and down as necessary (without ungrouping them), adding text, slurs etc. ad lib.
      in the newly available space. Any new objects will be ignored by the Assistant Performer. The height of
	  the page can also be adjusted as necessary.
   d) To reconnect the staff connectors:
         1. ungroup the connectors group (id:sys<systemNumber>connectors)
		 2. convert the selected lines to paths (using the Object to Path command from the Path menu).
		 3. select the paths tool (the selected paths now show their nodes)
		 4. select horizontally aligned path nodes by drawing a marquee (with the paths tool)
		 5. ctl-drag, or use the (shift)-arrow keys to move the nodes up or down.
		 6. regroup all the system's connectors, and set the group's id to sys<systemNumber>connectors
   e) Regroup the system, and reset its class (to 'system') and id (to 'sys<systemNumber>').
   f) Possibly redistribute the systems vertically. Either by eye, or using the Align tools.
   g) Re-lock the 'score' layer.